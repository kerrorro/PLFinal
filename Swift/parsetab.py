
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F165B32D8678CF3CFE72397A3FD456FE'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,12,15,16,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,50,51,52,54,],[1,-3,-30,-25,1,-5,-27,-29,-4,-26,1,-21,1,1,1,1,1,1,-28,-22,-31,-15,-13,-14,-16,-23,1,-19,-20,1,-24,-6,1,1,1,1,]),'$end':([2,3,4,5,6,7,8,9,10,14,15,17,24,26,29,30,31,32,33,36,38,39,43,49,],[-3,-30,-25,-2,-5,-27,-29,-4,-26,0,-21,-1,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,-6,]),'(':([1,11,],[16,23,]),')':([3,4,7,8,10,15,24,26,28,29,30,31,32,33,34,36,38,39,43,],[-30,-25,-27,-29,-26,-21,-28,-22,38,-31,-15,-13,-14,-16,39,-23,-19,-20,-24,]),'*':([3,4,6,7,8,9,10,15,24,25,26,28,29,30,31,32,33,34,36,38,39,43,48,],[-30,-25,-28,-27,-29,19,-26,-21,-28,19,-22,19,-31,19,19,19,19,19,-23,-19,-20,19,19,]),'+':([3,4,6,7,8,9,10,15,24,25,26,28,29,30,31,32,33,34,36,38,39,43,48,],[-30,-25,-28,-27,-29,20,-26,-21,-28,20,-22,20,-31,20,20,20,20,20,-23,-19,-20,20,20,]),',':([3,4,7,8,10,15,24,26,29,30,31,32,33,36,38,39,43,48,],[-30,-25,-27,-29,-26,-21,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,52,]),'-':([3,4,6,7,8,9,10,15,24,25,26,28,29,30,31,32,33,34,36,38,39,43,48,],[-30,-25,-28,-27,-29,21,-26,-21,-28,21,-22,21,-31,21,21,21,21,21,-23,-19,-20,21,21,]),'.':([8,],[18,]),'/':([3,4,6,7,8,9,10,15,24,25,26,28,29,30,31,32,33,34,36,38,39,43,48,],[-30,-25,-28,-27,-29,22,-26,-21,-28,22,-22,22,-31,22,22,22,22,22,-23,-19,-20,22,22,]),'CASE':([3,4,7,8,10,15,24,26,29,30,31,32,33,35,36,38,39,40,43,54,55,57,],[-30,-25,-27,-29,-26,-21,-28,-22,-31,-15,-13,-14,-16,42,-23,-19,-20,42,-24,-18,-9,-17,]),'QUOTEDTEXT':([0,2,3,4,5,6,7,8,9,10,12,15,16,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,52,],[10,-3,-30,-25,10,-5,-27,-29,-4,-26,10,-21,10,10,10,10,10,10,-28,-22,-31,-15,-13,-14,-16,-23,10,-19,-20,10,-24,-6,10,]),'STRING':([0,2,3,4,5,6,7,8,9,10,12,15,16,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,50,51,52,54,],[11,-3,-30,-25,11,-5,-27,-29,-4,-26,11,-21,11,11,11,11,11,11,-28,-22,-31,-15,-13,-14,-16,-23,11,-19,-20,11,-24,-6,11,11,11,11,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,15,24,26,29,30,31,32,33,36,38,39,43,49,],[12,-3,-30,-25,12,-5,-27,-29,-4,-26,-21,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,-6,]),'LET':([0,2,3,4,5,6,7,8,9,10,12,15,16,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,50,51,52,54,],[13,-3,-30,-25,13,-5,-27,-29,-4,-26,13,-21,13,13,13,13,13,13,-28,-22,-31,-15,-13,-14,-16,-23,13,-19,-20,13,-24,-6,13,13,13,13,]),':':([3,4,7,8,10,15,24,26,29,30,31,32,33,36,38,39,43,46,47,48,56,],[-30,-25,-27,-29,-26,-21,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,50,51,-11,-12,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,12,13,15,16,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,52,],[7,-3,-30,-25,7,-5,-27,-29,-4,-26,7,27,-21,7,7,7,7,7,7,-28,-22,-31,-15,-13,-14,-16,-23,7,-19,-20,7,-24,-6,7,]),'{':([3,4,7,8,10,15,24,25,26,29,30,31,32,33,36,38,39,43,],[-30,-25,-27,-29,-26,-21,-28,35,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,]),'}':([3,4,7,8,10,15,24,26,29,30,31,32,33,36,38,39,43,45,53,54,57,],[-30,-25,-27,-29,-26,-21,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-24,49,-10,-18,-17,]),'=':([27,],[37,]),'DEFAULT':([3,4,7,8,10,15,24,26,29,30,31,32,33,36,38,39,40,41,43,44,54,55,57,],[-30,-25,-27,-29,-26,-21,-28,-22,-31,-15,-13,-14,-16,-23,-19,-20,-8,46,-24,-7,-18,-9,-17,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,12,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,36,37,38,39,42,43,49,52,],[8,-3,-30,-25,8,-5,-27,-29,-4,-26,8,-21,8,29,8,8,8,8,8,-28,-22,-31,-15,-13,-14,-16,-23,8,-19,-20,8,-24,-6,8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'switch-statement':([0,5,],[2,2,]),'expression':([0,5,12,16,19,20,21,22,23,37,42,52,],[9,9,25,28,30,31,32,33,34,43,48,48,]),'floating-point-literal':([0,5,12,16,19,20,21,22,23,37,42,52,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'numeric-literal':([0,5,12,16,19,20,21,22,23,37,42,52,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'switch-case':([35,40,],[40,40,]),'statements':([50,51,54,],[53,55,57,]),'program':([0,5,],[5,5,]),'case-item-list':([42,52,],[47,56,]),'initializer':([27,],[36,]),'switch-cases':([35,40,],[41,44,]),'default':([41,],[45,]),'identifier-initializer':([13,],[26,]),'statement':([0,5,12,16,19,20,21,22,23,37,42,50,51,52,54,],[6,6,24,24,24,24,24,24,24,24,24,54,54,24,54,]),'programs':([0,5,],[14,17,]),'constant-declaration':([0,5,12,16,19,20,21,22,23,37,42,50,51,52,54,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programs","S'",1,None,None,None),
  ('programs -> program programs','programs',2,'p_programs','yacc.py',9),
  ('programs -> program','programs',1,'p_programs_base_case','yacc.py',16),
  ('program -> switch-statement','program',1,'p_program','yacc.py',23),
  ('program -> expression','program',1,'p_program','yacc.py',24),
  ('program -> statement','program',1,'p_program','yacc.py',25),
  ('switch-statement -> SWITCH expression { switch-cases default }','switch-statement',6,'p_switch_statement','yacc.py',32),
  ('switch-cases -> switch-case switch-cases','switch-cases',2,'p_switch_cases','yacc.py',38),
  ('switch-cases -> switch-case','switch-cases',1,'p_switch_cases_base_case','yacc.py',45),
  ('switch-case -> CASE case-item-list : statements','switch-case',4,'p_switch_case','yacc.py',51),
  ('default -> DEFAULT : statements','default',3,'p_default','yacc.py',59),
  ('case-item-list -> expression','case-item-list',1,'p_case_item_list','yacc.py',65),
  ('case-item-list -> expression , case-item-list','case-item-list',3,'p_case_item_list','yacc.py',66),
  ('expression -> expression + expression','expression',3,'p_arithmetic','yacc.py',78),
  ('expression -> expression - expression','expression',3,'p_arithmetic','yacc.py',79),
  ('expression -> expression * expression','expression',3,'p_arithmetic','yacc.py',80),
  ('expression -> expression / expression','expression',3,'p_arithmetic','yacc.py',81),
  ('statements -> statement statements','statements',2,'p_statements','yacc.py',86),
  ('statements -> statement','statements',1,'p_statements_base_case','yacc.py',90),
  ('statement -> PRINT ( expression )','statement',4,'p_print_function','yacc.py',94),
  ('statement -> STRING ( expression )','statement',4,'p_string_function','yacc.py',98),
  ('statement -> constant-declaration','statement',1,'p_constant_declaration_statement','yacc.py',104),
  ('constant-declaration -> LET identifier-initializer','constant-declaration',2,'p_constant_declaration','yacc.py',108),
  ('identifier-initializer -> IDENTIFIER initializer','identifier-initializer',2,'p_identifier_initializer','yacc.py',114),
  ('initializer -> = expression','initializer',2,'p_initializer','yacc.py',120),
  ('expression -> numeric-literal','expression',1,'p_expression','yacc.py',126),
  ('expression -> QUOTEDTEXT','expression',1,'p_expression','yacc.py',127),
  ('expression -> IDENTIFIER','expression',1,'p_expression','yacc.py',128),
  ('expression -> statement','expression',1,'p_expression','yacc.py',129),
  ('numeric-literal -> INTEGER','numeric-literal',1,'p_numeric_literal','yacc.py',136),
  ('numeric-literal -> floating-point-literal','numeric-literal',1,'p_numeric_literal','yacc.py',137),
  ('floating-point-literal -> INTEGER . INTEGER','floating-point-literal',3,'p_floating_point_literal','yacc.py',147),
  ('invalid -> INVALIDQUOTEDTEXT','invalid',1,'p_invalid_quoted_text','yacc.py',153),
]
